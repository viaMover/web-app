version: 2

jobs:
  build:
    working_directory: /tmp/workspace
    docker:
      - image: cimg/node:14.17.4
    environment:
      - VUE_APP_IS_DEV: false
    steps:
      - checkout
      - run:
          name: Prepare files to build static web app
          command: |
            cd /tmp/workspace
            openssl aes-256-cbc -pbkdf2 -iter 100000 -d -k $CI_SECRET -in deploy/keys-stg.enc -out deploy/keys-stg.dec
            mv deploy/keys-stg.dec src/settings/keys.ts
      - run:
          name: Build web app
          command: yarn && yarn build
      - persist_to_workspace:
          root:  /tmp/workspace
          paths: [ '*' ]

  deploy_stg:
    working_directory: /tmp/workspace
    docker:
      - image: cimg/base:2021.04
    environment:
      SENTRY_ORG: holyheld
      SENTRY_PROJECT: move-web-app
      SENTRY_ENVIRONMENT: development
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Install Google Cloud SDK
          command: |
            wget -qO- https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-351.0.0-linux-x86_64.tar.gz | sudo tar xz -C /usr/local
            sudo /usr/local/google-cloud-sdk/install.sh --quiet
            sudo /usr/local/google-cloud-sdk/bin/gcloud components install app-engine-go
      - run:
          name: Decrypt deploy key
          command: |
            cd /tmp/workspace
            openssl aes-256-cbc -pbkdf2 -iter 100000 -d -k $CI_SECRET -in deploy/deploykey-stg.enc -out deploy/deploykey-stg.json
            /usr/local/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file deploy/deploykey-stg.json
      - run:
          name: Deploy to GAE
          command: |
            # align structure for static GAE app
            mkdir deploy/www
            mv dist/* deploy/www/
            mv deploy/www dist/
            cp deploy/moverwebapp-stg.yaml dist/
            cd dist
            /usr/local/google-cloud-sdk/bin/gcloud app deploy --project mcmannaman-208313 moverwebapp-stg.yaml --promote
      - run: 
          name: Create release and notify Sentry of deploy
          command: |
            curl -sL https://sentry.io/get-cli/ | bash
            export SENTRY_RELEASE=$(sentry-cli releases propose-version)
            sentry-cli releases new -p $SENTRY_PROJECT $SENTRY_RELEASE
            sentry-cli releases set-commits $SENTRY_RELEASE --auto
            sentry-cli releases files $SENTRY_RELEASE upload-sourcemaps dist/www/js/*
            sentry-cli releases finalize $SENTRY_RELEASE
            sentry-cli releases deploys $SENTRY_RELEASE new -e $SENTRY_ENVIRONMENT

  deploy_prod:
    working_directory: /tmp/workspace
    docker:
      - image: cimg/base:2021.04
    environment:
      SENTRY_ORG: holyheld
      SENTRY_PROJECT: move-web-app
      SENTRY_ENVIRONMENT: production
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Install Google Cloud SDK
          command: |
            wget -qO- https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-351.0.0-linux-x86_64.tar.gz | sudo tar xz -C /usr/local
            sudo /usr/local/google-cloud-sdk/install.sh --quiet
            sudo /usr/local/google-cloud-sdk/bin/gcloud components install app-engine-go
      - run:
          name: Decrypt deploy key
          command: |
            cd /tmp/workspace
            openssl aes-256-cbc -pbkdf2 -iter 100000 -d -k $CI_SECRET -in deploy/deploykey-stg.enc -out deploy/deploykey-stg.json
            /usr/local/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file deploy/deploykey-stg.json
      - run:
          name: Deploy to GAE
          command: |
            # align structure for static GAE app
            mkdir deploy/www
            mv dist/* deploy/www/
            mv deploy/www dist/
            cp deploy/moverwebapp-prod.yaml dist/
            cd dist
            /usr/local/google-cloud-sdk/bin/gcloud app deploy --project mcmannaman-208313 moverwebapp-prod.yaml --promote
      - run:
          name: Create release and notify Sentry of deploy
          command: |
            curl -sL https://sentry.io/get-cli/ | bash
            export SENTRY_RELEASE=$(sentry-cli releases propose-version)
            sentry-cli releases new -p $SENTRY_PROJECT $SENTRY_RELEASE
            sentry-cli releases set-commits $SENTRY_RELEASE --auto
            sentry-cli releases files $SENTRY_RELEASE upload-sourcemaps dist/www/js/*
            sentry-cli releases finalize $SENTRY_RELEASE
            sentry-cli releases deploys $SENTRY_RELEASE new -e $SENTRY_ENVIRONMENT

workflows:
  version: 2
  commit:
    jobs:
      - build
      - deploy_stg:
          filters:
            branches:
              only:
                - staging
          requires:
            - build
      - deploy_prod:
          filters:
            branches:
              only:
                - release
          requires:
            - build
